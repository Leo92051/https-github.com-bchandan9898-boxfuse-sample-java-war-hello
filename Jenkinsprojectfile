pipeline {
    agent any
    parameters {
  choice(
    name: 'PARAMETER_NAME', // Name of the parameter to be displayed
    choices: ['fe/dev', 'fe/qa', 'master'], // List of available choices
    description: 'Specify the branch name to deploy', // Optional description of the parameter
  )
}

    stages {
        stage("GIT checkout") {
            steps {
                script {
                    // Checkout the specified branch
                    def parameterName = params.PARAMETER_NAME
                    checkout([$class: 'GitSCM', parameters: [[name: parameterName]], userRemoteConfigs: [[url: 'https://github.com/Leo92051/https-github.com-bchandan9898-boxfuse-sample-java-war-hello.git']]])
                }
            }
         }
        
        stage("Build") {
            steps {
                sh "mvn clean package"
                sh "mv target/hello-1.0.war target/boxfuse-sample-java-war-hello.war"
            }
        }
        stage("Deploy to DEV-ENVI") {
            when {
                expression { params.PARAMETER_NAME == 'fe/dev' }
            }
            steps {
                deployToTomcat('18.60.200.30', 'tomcat', 'tomcat', 'http://18.60.200.30:8080/manager/text', '/boxfuse-sample-java-war-hello', 'DEV-ENVI')
            }
        }
        stage("Deploy to QA-ENVI") {
            when {
                expression { params.PARAMETER_NAME == 'fe/qa' }
            }
            steps {
                deployToTomcat('18.61.174.147', 'tomcat', 'tomcat', 'http://18.61.174.147:8080/manager/text', '/boxfuse-sample-java-war-hello', 'QA-ENVI')
            }
        }
        stage("Deploy to PROD-ENVI") {
            when {
                expression { params.PARAMETER_NAME == 'master' }
            }
            steps {
                input(message: "Do you want to proceed to PROD-ENVI?", ok: "Proceed") // Approval step

                // Deploy to PROD-ENVI server after approval
                deployToTomcat('18.61.64.146', 'tomcat', 'tomcat', 'http://18.61.64.146:8080/manager/text', '/boxfuse-sample-java-war-hello', 'PROD-ENVI')
                
                // Send Slack notification
                slackSend(channel: '7-30am-cloud-devops-batch', message: "Deployment to PROD-ENVI has been approved by manager.")
            }
        }
    }
}

def deployToTomcat(tomcatIP, username, password, tomcatURL, contextPath, environment) {
    def warFileName = 'target/boxfuse-sample-java-war-hello.war'

    // Deploy the WAR file using curl
    sh """
        curl -v -u ${username}:${password} --upload-file ${warFileName} ${tomcatURL}/deploy?path=${contextPath}&update=true
    """
    echo "Deployment to ${environment} server completed."
}
